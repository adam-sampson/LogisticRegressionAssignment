library(data.table)
sol.dt <- fread("MarketingCampaignSolicitations.txt",sep="\t",header=TRUE)
geo.dt <- fread("MarketingCampaignGeo+LandArea.txt",sep="\t",header=TRUE)
library(readxl)
library(readxl)
?read_xls
geokey.dt <- read_xls("GeoKey.xls",sheet=1,col_names = FALSE,col_types = c("text","text","text"))
?fread
geokey.dt <- fread("GeoKey.txt",sep="\t",header=TRUE)
View(geokey.dt)
str(geokey.dt)
summary(sol.dt)
summary(geo.dt)
View(geo.dt)
View(sol.dt)
varToScale <- c("MSRP",
"OfferPrice")
library(data.table)
sol.dt <- fread("MarketingCampaignSolicitations.txt",sep="\t",header=TRUE)
print(sol.dt$MSRP[1])
varToScale <- c("MSRP",
"OfferPrice")
sol.dt[ , (varToScale) := lapply(.SD,scale), .SDcols = varToScale]
print(sol.dt$MSRP[1])
?unscale
scale
?scale
unscale()
attributes(sol.dt$MSRP)
attributes(sol.dt$MSRP[1])
unscale <- function(in.vec) {
return(in.vec * attr(in.vec, 'scaled:scale') + attr(in.vec,'scaled:center'))
}
print(unscale(sol.dt$MSRP)[1])
summary(sol.dt)
library(lubridate)
head(sol.dt)
as.Date()
?as.Date
?lubridate
parse_date_time(sol.dt$MailDate[1])
parse_date_time(sol.dt$MailDate[1],orders = c('ymd HMS'))
parse_date_time(sol.dt$MailDate[209],orders = c('ymd HMS'))
dateVars <- c("MailDate","PurchaseDate")
rm(varToScale)
sol.dt[ , (dateVars) := lapply(.SD,parse_date_time,c('ymd HMS')), .SDcols = dateVars]
str(sol.dt$MailDate)
year(sol.dt$MailDate[1])
View(sol.dt)
rm(dateVars)
geo.dt <- fread("MarketingCampaignGeo+LandArea.txt",sep="\t",header=TRUE)
geokey.dt <- fread("GeoKey.txt",sep="\t",header=TRUE)
View(geokey.dt)
View(geo.dt)
View(sol.dt)
geo.dt[RecordNumber == "5724961648136", sum(4:14)]
geo.dt[RecordNumber == "5724961648136"]
geo.dt[RecordNumber == "5724961648136", sum(c(4:14))]
geo.dt[RecordNumber == "5724961648136", sum(c(4,5))]
geo.dt[RecordNumber == "5724961648136", 4]
geo.dt[RecordNumber == "5724961648136", 4+5]
geo.dt[RecordNumber == "5724961648136", c(4,5)]
geo.dt[RecordNumber == "5724961648136", c(4:14)]
geo.dt[RecordNumber == "5724961648136", sum(c(4:14))]
geo.dt[RecordNumber == "5724961648136", c(4:14)]
sum(geo.dt[RecordNumber == "5724961648136", c(4:14)])
geokey.dt <- fread("GeoKey.txt",sep="\t",header=FALSE)
ageVars <- c("ACSAGE4Y0",
"ACSAGE17Y0",
"ACSAGE59",
"ACSAGE1014",
"ACSAGE1519",
"ACSAGE2024",
"ACSAGE34Y0",
"ACSAGE44Y0",
"ACSAGE54Y0",
"ACSAGE64Y0",
"ACSAGE65Y0")
ageVars <- c("ACSAGE4Y0",
"ACSAGE59",
"ACSAGE1014",
"ACSAGE1519",
"ACSAGE2024",
"ACSAGE34Y0",
"ACSAGE44Y0",
"ACSAGE54Y0",
"ACSAGE64Y0",
"ACSAGE65Y0")
head(geo.dt[ , (ageVars)])
geo.dt <- fread("MarketingCampaignGeo+LandArea.txt",sep="\t",header=TRUE)
head(geo.dt[ , (ageVars)])
geo.dt[1:10 , (ageVars)]
geo.dt[ , (ageVars) := (.SD / sum(ageVars,na.rm = TRUE)), by=1:NROW(geo.dt), .SDcols = ageVars]
geo.dt[ , (ageVars) := (.SD / sum(ageVars,na.rm = TRUE)), by=1:NROW(geo.dt), .SDcols = ageVars]
geo.dt[1:10 ,]
geo.dt[1:10 , c(ageVars)]
geo.dt[1:10 , c(4:14)]
geo.dt[ , (ageVars) := (.SD / sum(ageVars,na.rm = TRUE)), by=1:NROW(geo.dt), .SDcols = ageVars]
str(geo.dt)
geo.dt[ , (ageVars) := (.SD / sum(ageVars,na.rm = TRUE)), by=1:NROW(geo.dt), .SDcols = ageVars]
?sum
?rowSums
geo.dt[1, sum(.SD), by=1:NROW(geo.dt), .SDcols = c(4,6:14)]
geo.dt[1, sum(.SD), .SDcols = c(4,6:14)]
geo.dt[1, c("ACSTTPOP0)]
geo.dt[1, c("ACSTTPOP0")]
geo.dt[1, sum(.SD), .SDcols = c(4,6:14)]
geo.dt[ , (ageVars) := (.SD / "ACSTTPOP0"), by=1:NROW(geo.dt), .SDcols = ageVars]
geo.dt[ , (ageVars) := (.SD / ACSTTPOP0), by=1:NROW(geo.dt), .SDcols = ageVars]
geo.dt[ , (ageVars) := (.SD / ACSTTPOP0), by=RecordNumber, .SDcols = ageVars]
?as.symbol
geo.dt[ , (ageVars) := (.SD / as.symbol(ACSTTPOP0)), by=RecordNumber, .SDcols = ageVars]
geo.dt[ , (ageVars) := (.SD / eval(as.symbol(ACSTTPOP0))), by=RecordNumber, .SDcols = ageVars]
geo.dt[ , (ageVars) := .SD / ACSTTPOP0, by=RecordNumber, .SDcols = ageVars]
str(geo.dt)
?set
set(geo.dt,j="RecordNumber",as.character(RecordNumber))
set(geo.dt,j="RecordNumber",value=as.character(RecordNumber))
set(geo.dt,j="RecordNumber",value=as.character(eval(RecordNumber)))
geo.dt[ , RecordNumber := as.character(RecordNumber)]
str(geo.dt)
names(geo.dt)
names(geo.dt)[-1]
as.symbol(geo.dt$RecordNumber)
as.symbol(names(geo.dt)[-1])
geo.dt[ , (col) := as.numeric(as.symbol(col))]
for(col in names(geo.dt)[-1]) {
geo.dt[ , (col) := as.numeric(as.symbol(col))]
}
geo.dt[ , (col) := as.numeric(col)]
str(geo.dt)
geo.dt[ , names(geo.dt)[-1] := lapply(.SD,as.numeric)]
geo.dt[ , names(geo.dt)[-1] := lapply(.SD,as.numeric), .SDcols = names(geo.dt)[-1]]
geo.dt <- fread("MarketingCampaignGeo+LandArea.txt",sep="\t",header=TRUE)
geo.dt[ , RecordNumber := as.character(RecordNumber)]
geo.dt[ , names(geo.dt)[-1] := lapply(.SD,as.numeric), .SDcols = names(geo.dt)[-1]]
str(geo.dt)
ageVars <- c("ACSAGE4Y0",
"ACSAGE59",
"ACSAGE1014",
"ACSAGE1519",
"ACSAGE2024",
"ACSAGE34Y0",
"ACSAGE44Y0",
"ACSAGE54Y0",
"ACSAGE64Y0",
"ACSAGE65Y0")
geo.dt[ , (ageVars) := .SD / ACSTTPOP0, by=RecordNumber, .SDcols = ageVars]
geo.dt <- fread("MarketingCampaignGeo+LandArea.txt",sep="\t",header=TRUE)
geo.dt[ , RecordNumber := as.character(RecordNumber)]
geo.dt[ , names(geo.dt)[-1] := lapply(.SD,as.numeric), .SDcols = names(geo.dt)[-1]]
ageVars <- c("ACSAGE4Y0",
"ACSAGE59",
"ACSAGE1014",
"ACSAGE1519",
"ACSAGE2024",
"ACSAGE34Y0",
"ACSAGE44Y0",
"ACSAGE54Y0",
"ACSAGE64Y0",
"ACSAGE65Y0")
geo.dt[1:10 , c(4:14)]
geo.dt[ , (ageVars) := .SD / ACSTTPOP0, .SDcols = ageVars]
geo.dt[1:10 , c(4:14)]
93/(93+155+114+18+46+145+131+88+302+147+250)
93/(1334)
93+155+114+18+46+145+131+88+302+147+250
geo.dt[1:10 , c(4,6:14)]
rm(ageVars)
geo.dt[ , ACSAGE17Y0 := ACSAGE17Y0 / ACSTTPOP0]
View(geo.dt)
geo.dt <- fread("MarketingCampaignGeo+LandArea.txt",sep="\t",header=TRUE)
ageVars <- c("ACSAGE4Y0",
"ACSAGE17Y0",
"ACSAGE59",
"ACSAGE1014",
"ACSAGE1519",
"ACSAGE2024",
"ACSAGE34Y0",
"ACSAGE44Y0",
"ACSAGE54Y0",
"ACSAGE64Y0",
"ACSAGE65Y0")
geo.dt[ , (ageVars) := .SD / ACSTTPOP0, .SDcols = ageVars]
rm(ageVars)
View(geo.dt)
str(geo.dt)
geo.dt[ , ACSMALES := ACSMALES / (ACSMALES + ACSFEMALES)]
geo.dt[1]
geo.dt[ , ACSFEMALES := ACSFEMALES / (ACSMALES + ACSFEMALES)]
geo.dt[1]
geo.dt[ , ACSFEMALES := 1 - ACSMALES]
geo.dt[1]
geo.dt[3]
View(geokey.dt)
View(geo.dt)
geo.dt[1,sum(NEVMAR0:DIVORC0)]
sum(geo.dt[1,NEVMAR0:DIVORC0])
geo.dt <- fread("MarketingCampaignGeo+LandArea.txt",sep="\t",header=TRUE)
geo.dt[ , RecordNumber := as.character(RecordNumber)]
geo.dt[ , names(geo.dt)[-1] := lapply(.SD,as.numeric), .SDcols = names(geo.dt)[-1]]
geo.dt[ , c(ACSAGE4Y0:ACSAGE65Y0) := .SD / ACSTTPOP0, .SDcols = c(ACSAGE4Y0:ACSAGE65Y0)]
geo.dt[ , (ACSAGE4Y0:ACSAGE65Y0) := .SD / ACSTTPOP0, .SDcols = c(ACSAGE4Y0:ACSAGE65Y0)]
geo.dt[ , c(ACSAGE4Y0:ACSAGE65Y0) := .SD / ACSTTPOP0, .SDcols = c(ACSAGE4Y0:ACSAGE65Y0)]
geo.dt[ , (ACSAGE4Y0:ACSAGE65Y0) := .SD / ACSTTPOP0, .SDcols = (ACSAGE4Y0:ACSAGE65Y0)]
geo.dt[ , c(ACSAGE4Y0:ACSAGE65Y0) := .SD / ACSTTPOP0, .SDcols = (ACSAGE4Y0:ACSAGE65Y0)]
names(geo.dt)
names(geo.dt)[ACSAGE4Y0]
names(geo.dt)["ACSAGE4Y0"]
?names
names(geo.dt)[4:14]
geo.dt[ , names(geo.dt)[4:14] := .SD / ACSTTPOP0, .SDcols = names(geo.dt)[4:14]]
geo.dt[ , ACSMALES := ACSMALES / (ACSMALES + ACSFEMALES)]
geo.dt[ , ACSFEMALES := 1 - ACSMALES]
geo.dt[ , ACSMALES := ACSMALES / (ACSMALES + ACSFEMALES)]
geo.dt[ , ACSFEMALES := 1 - ACSMALES]
geo.dt[ , names(geo.dt)[18:21] := .SD / MARSTAT0, .SDcols = names(geo.dt)[18:21]]
view(geo.dt)
View(geo.dt)
246+1031
1334-246+1031
1334-246-1031
sum(geo.dt[1,23:29])
sum(geo.dt[1,c(23:27,28:31)])
sum(geo.dt[1,c(24:27,28:31)])
sum(geo.dt[1,c(24:27,29:31)])
sum(geo.dt[2,c(24:27,29:31)])
?setcolorder
setcolorder(geo.dt,c(1:33,37,34:36,38:100))
length(geo.dt)
geo.dt[,101]
setcolorder(geo.dt,c(1:33,37,34:36,38:101))
geo.dt[ , FMHH0 := FMHH0 / TOTHH0]
geo.dt[ , NFMHH0 := 1 - FMHH0]
View(geo.dt)
geo.dt[ , NOFMHH0 := 1 - FMHH0]
View(geo.dt)
sum(geo.dt[1,TT8GR0:TTGRAD0])
geo.dt[ , names(geo.dt)[40:46] := .SD / EDUCAT0, .SDcols = names(geo.dt)[40:46]]
sum(geo.dt[1,c(48:63)])
geo.dt[ , c(48:63) := .SD / HHINCOM0, .SDcols = c(48:63)]
View(geo.dt)
geo.dt[ , c(69:71) := .SD / ACSTOTHU, .SDcols = c(69:71)]
geo.dt[1:5,ACSAVGHHSZ]
geo.dt[ , ACSAVGHHSZ := lapply(ACSAVGHHSZ,scale)]
geo.dt[1:5,ACSAVGHHSZ]
geo.dt[ , ACSAVGHHSZ := scale(ACSAVGHHSZ)]
geo.dt[1:5,ACSAVGHHSZ]
unscale(geo.dt[1:5,ACSAVGHHSZ])
unscale <- function(in.vec) {
return(in.vec * attr(in.vec, 'scaled:scale') + attr(in.vec,'scaled:center'))
}
unscale(geo.dt[1:5,ACSAVGHHSZ])
sum(geo.dt[1,S1UNITD0:S20UNITS0])
geo.dt[ , c(76:81) := .SD / UNITS0, .SDcols = c(76:81)]
geo.dt[ , MDYRBLT0 := scale(MDYRBLT0)]
geo.dt[ , c(84:90) := .SD / VALOWNR0, .SDcols = c(84:90)]
geo.dt[ , MEDVALO0 := scale(MEDVALO0)]
geo.dt[ , AGGVALO0 := scale(AGGVALO0)]
geo.dt[ , c(94:100) := .SD / GROSSRNT0, .SDcols = c(94:100)]
geo.dt[ , MDGRSRN0 := scale(MDGRSRN0)]
rm(col)
attr(geo.dt[1,])
attr(geo.dt[1,], 'scaled:scale')
attr(geo.dt[,1], 'scaled:scale')
attr(geo.dt[,2], 'scaled:scale')
attr(geo.dt[,72], 'scaled:scale')
attr(geo.dt[,71], 'scaled:scale')
attr(geo.dt[,73], 'scaled:scale')
geo.dt[ , LANDAREA := scale(LANDAREA)]
attr(geo.dt[,2], 'scaled:scale')
geo.dt[,2]
geo.dt$LANDAREA
attr(geo.dt$LANDAREA, 'scaled:scale')
attr(geo.dt$LANDAREA, 'scaled:scal')
attr(geo.dt$LANDAREA, 'scaled')
attr(geo.dt$LANDAREA, 'a:a')
attr(geo.dt$LANDAREA, 'scaled:scaledsa')
attr(geo.dt$LANDAREA, 'scaled:scaled')
attr(geo.dt$LANDAREA, 'scaled:scale')
attr(geo.dt[[2]], 'scaled:scale')
unscale <- function(in.vec) {
if(is.null(attr(in.vec, 'scaled:scale')==FALSE)) {
return(in.vec * attr(in.vec, 'scaled:scale') + attr(in.vec,'scaled:center'))
} else {
return(in.vec)
}
}
print(paste("Took",Sys.time()-start_time,"time to complete."))
start_time <- Sys.time()
print(paste("Took",Sys.time()-start_time,"time to complete."))
##########
# Fall 2017, Bellarmine University MSA
# Logistic Regression and PCA Analysis Assignment
# Student: Adam Sampson
##########
library(data.table)
library(lubridate)
start_time <- Sys.time()
sol.dt <- fread("MarketingCampaignSolicitations.txt",sep="\t",header=TRUE)
geo.dt <- fread("MarketingCampaignGeo+LandArea.txt",sep="\t",header=TRUE)
geokey.dt <- fread("GeoKey.txt",sep="\t",header=FALSE)
summary(sol.dt)
# MSRP from 300 to 6840
# OfferPrice from 60 to 70
# Two dates, Three Product Information Characters, and One record ID.
summary(geo.dt)
# Census data is in counts per block group.
# Ages have overlapping categories
# Create an unscale function to help interpret scaled data.
unscale <- function(in.vec) {
if(is.null(attr(in.vec, 'scaled:scale')==FALSE)) {
return(in.vec * attr(in.vec, 'scaled:scale') + attr(in.vec,'scaled:center'))
} else {
return(in.vec)
}
}
#---
# Convert marketing results data and/or scale it.
#---
# Convert dates to date format
dateVars <- c("MailDate","PurchaseDate")
sol.dt[ , (dateVars) := lapply(.SD,parse_date_time,c('ymd HMS')), .SDcols = dateVars]
rm(dateVars)
# Scale variables that should be scaled
# print(sol.dt$MSRP[1])
varToScale <- c("MSRP",
"OfferPrice")
sol.dt[ , (varToScale) := lapply(.SD,scale), .SDcols = varToScale]
rm(varToScale)
# print(sol.dt$MSRP[1])
# print(unscale(sol.dt$MSRP)[1])
#---
# Convert census variables to either percents or scales
#---
# Scale land area
geo.dt[ , LANDAREA := scale(LANDAREA)]
# Convert RecordNumber to character in census data
geo.dt[ , RecordNumber := as.character(RecordNumber)]
# Convert all numbers in census data to num and not a mix of num and int
geo.dt[ , names(geo.dt)[-1] := lapply(.SD,as.numeric), .SDcols = names(geo.dt)[-1]]
# Columns 4: 14 are the age count columns
geo.dt[ , names(geo.dt)[4:14] := .SD / ACSTTPOP0, .SDcols = names(geo.dt)[4:14]]
# geo.dt[1:10 , c(4,6:14)]
# rm(ageVars)
# Calculate male percent based on formula, but then can't use same formula for female
geo.dt[ , ACSMALES := ACSMALES / (ACSMALES + ACSFEMALES)]
geo.dt[ , ACSFEMALES := 1 - ACSMALES]
# Columns 18:21 are marital status
geo.dt[ , names(geo.dt)[18:21] := .SD / MARSTAT0, .SDcols = names(geo.dt)[18:21]]
# Columns FMHH0 and NFMHH0 add up to TOTHH0, but they are in a strange order
setcolorder(geo.dt,c(1:33,37,34:36,38:101))
geo.dt[ , FMHH0 := FMHH0 / TOTHH0]
geo.dt[ , NOFMHH0 := 1 - FMHH0]
# Columns 40:46 add up to EDUCAT0 column 39
geo.dt[ , c(40:46) := .SD / EDUCAT0, .SDcols = c(40:46)]
# HHINCOM0 col 47 is the sum of 48:63
geo.dt[ , c(48:63) := .SD / HHINCOM0, .SDcols = c(48:63)]
# ACSTOTHU col 68 is the sum of 69:71
geo.dt[ , c(69:71) := .SD / ACSTOTHU, .SDcols = c(69:71)]
# ACSAVGHHSZ is average household size. Needs to be scaled.
geo.dt[ , ACSAVGHHSZ := scale(ACSAVGHHSZ)]
# UNITS0 = 76:81
geo.dt[ , c(76:81) := .SD / UNITS0, .SDcols = c(76:81)]
# MDYRBLT0 needs to be scaled, median year built
geo.dt[ , MDYRBLT0 := scale(MDYRBLT0)]
# VALOWNR0 83 is counts of 84:90
geo.dt[ , c(84:90) := .SD / VALOWNR0, .SDcols = c(84:90)]
# MEDVALO0 is median value of owner occupied so scale it
geo.dt[ , MEDVALO0 := scale(MEDVALO0)]
# AGGVALO0 is avg value of owner occupied so scale it
geo.dt[ , AGGVALO0 := scale(AGGVALO0)]
# GROSSRNT is 94:100
geo.dt[ , c(94:100) := .SD / GROSSRNT0, .SDcols = c(94:100)]
# MDGRSRN0 is median gross rent and needs to be scaled
geo.dt[ , MDGRSRN0 := scale(MDGRSRN0)]
print(paste("Took",Sys.time()-start_time,"seconds to complete."))
